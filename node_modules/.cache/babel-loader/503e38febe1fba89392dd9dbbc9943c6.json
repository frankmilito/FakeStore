{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\General\\\\Desktop\\\\reactT1-master\\\\src\\\\App.js\";\nimport React from 'react'; // import TodoItems from './TodoItems'\n// import todos from './TodoData'\n// import Test from './test'\n// class App extends React.Component {\n//     render() {\n//        const onChangeHandler =(index) =>{\n//             let todoList = [...this.state.todos]\n//             todoList[index].completed= !todoList[index].completed\n//             this.setState({\n//                 todos: todoList\n//             })\n//             if(this.state.todos.completed ==true){\n//                 alert(\"this is true\")\n//             }\n//         }\n//         // const myTodo = this.state.todoData.map(function (todo,index) {\n//             // return <TodoItems name={todo.name} key={index} completed={todo.completed} handleChange={this.onChangeHandler} />\n//             // return <TodoItems todo={todo} handleChange={this.onChangeHandler}/>\n//         // })\n//         return (\n//             <div>\n//                 {/* {myTodo} */}\n//                 {this.state.todos.map((todo,index)=>(\n//                     <>\n//                 <p>{todo.name}</p> \n//                 <input type=\"checkbox\" checked={todo.completed} onChange={()=>onChangeHandler(index)} key={index}/>\n//                 <label>{todo.name + \" \" + todo.completed}</label>\n//                 </>\n//                 )) }\n//                 {/* <TodoItems todo={todo} handleChange={this.onChangeHandler}/> */}\n//             </div>\n//         )\n//     }\n// }\n// function App(){\n//     const [dos, setDos]=useState(todos)\n//     const handleChange=(e)=>{\n//         let currentId = e.target.id\n//         dos.forEach(item=>{\n//             if(item.id == currentId){\n//                 console.log(item.completed)\n//             }\n//         })\n//         // console.log(e.target.id)\n//     }\n//     console.log(dos)\n//             const myTodo = dos.map(function (item) {\n//             return <TodoItems name={item.name} key={item.id} id={item.id}completed={item.completed} handleChange={(e)=>handleChange(e)} />\n//         })\n//     return(\n//         <>\n//             <h1>Hello</h1>\n//             {myTodo}\n//         </>\n//     )\n// }\n// export default App\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  const conChangeHandler = index => {\n    let todoList = [...this.state.todos];\n    todoList[index].completed = !todoList[index].completed;\n    this.setState({\n      todos: todoList\n    });\n\n    if (this.state.todos.completed == true) {\n      alert(\"this is true\");\n    }\n  }; // const myTodo = this.state.todoData.map(function (todo,index) {\n  // return <TodoItems name={todo.name} key={index} completed={todo.completed} handleChange={this.onChangeHandler} />\n  // return <TodoItems todo={todo} handleChange={this.onChangeHandler}/>\n  // })\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: this.state.todos.map((todo, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: todo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: todo.completed,\n        onChange: () => onChangeHandler(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: todo.name + \" \" + todo.completed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 18\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/General/Desktop/reactT1-master/src/App.js"],"names":["React","App","props","conChangeHandler","index","todoList","state","todos","completed","setState","alert","map","todo","name","onChangeHandler"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AACT,QAAMC,gBAAgB,GAAGC,KAAD,IAAU;AAC5B,QAAIC,QAAQ,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,KAAf,CAAf;AACAF,IAAAA,QAAQ,CAACD,KAAD,CAAR,CAAgBI,SAAhB,GAA2B,CAACH,QAAQ,CAACD,KAAD,CAAR,CAAgBI,SAA5C;AAEA,SAAKC,QAAL,CAAc;AACVF,MAAAA,KAAK,EAAEF;AADG,KAAd;;AAGA,QAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,SAAjB,IAA6B,IAAhC,EAAqC;AACjCE,MAAAA,KAAK,CAAC,cAAD,CAAL;AACH;AACJ,GAVH,CADS,CAYP;AACI;AACA;AAEJ;;;AACA,sBAEI;AAAA,cAGK,KAAKJ,KAAL,CAAWC,KAAX,CAAiBI,GAAjB,CAAqB,CAACC,IAAD,EAAMR,KAAN,kBAClB;AAAA,8BACJ;AAAA,kBAAIQ,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAED,IAAI,CAACJ,SAArC;AAAgD,QAAA,QAAQ,EAAE,MAAIM,eAAe,CAACV,KAAD;AAA7E,SAA2FA,KAA3F;AAAA;AAAA;AAAA;AAAA,cAFI,eAGJ;AAAA,kBAAQQ,IAAI,CAACC,IAAL,GAAY,GAAZ,GAAkBD,IAAI,CAACJ;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHI;AAAA,oBADH;AAHL;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBZ;;KAlCQP,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React from 'react'\n// import TodoItems from './TodoItems'\n// import todos from './TodoData'\n// import Test from './test'\n// class App extends React.Component {\n//     render() {\n//        const onChangeHandler =(index) =>{\n//             let todoList = [...this.state.todos]\n//             todoList[index].completed= !todoList[index].completed\n    \n//             this.setState({\n//                 todos: todoList\n//             })\n//             if(this.state.todos.completed ==true){\n//                 alert(\"this is true\")\n//             }\n//         }\n//         // const myTodo = this.state.todoData.map(function (todo,index) {\n//             // return <TodoItems name={todo.name} key={index} completed={todo.completed} handleChange={this.onChangeHandler} />\n//             // return <TodoItems todo={todo} handleChange={this.onChangeHandler}/>\n        \n//         // })\n//         return (\n            \n//             <div>\n        \n//                 {/* {myTodo} */}\n//                 {this.state.todos.map((todo,index)=>(\n//                     <>\n//                 <p>{todo.name}</p> \n//                 <input type=\"checkbox\" checked={todo.completed} onChange={()=>onChangeHandler(index)} key={index}/>\n//                 <label>{todo.name + \" \" + todo.completed}</label>\n//                 </>\n//                 )) }\n//                 {/* <TodoItems todo={todo} handleChange={this.onChangeHandler}/> */}\n//             </div>\n//         )\n//     }\n// }\n\n// function App(){\n\n//     const [dos, setDos]=useState(todos)\n//     const handleChange=(e)=>{\n//         let currentId = e.target.id\n//         dos.forEach(item=>{\n//             if(item.id == currentId){\n//                 console.log(item.completed)\n        \n//             }\n//         })\n//         // console.log(e.target.id)\n//     }\n//     console.log(dos)\n//             const myTodo = dos.map(function (item) {\n//             return <TodoItems name={item.name} key={item.id} id={item.id}completed={item.completed} handleChange={(e)=>handleChange(e)} />\n//         })\n//     return(\n//         <>\n//             <h1>Hello</h1>\n//             {myTodo}\n//         </>\n//     )\n// }\n\n\n\n\n// export default App\n\nfunction App(props) {\n           const conChangeHandler =(index) =>{\n                 let todoList = [...this.state.todos]\n                 todoList[index].completed= !todoList[index].completed\n         \n                 this.setState({\n                     todos: todoList\n                 })\n                 if(this.state.todos.completed ==true){\n                     alert(\"this is true\")\n                 }\n             }\n             // const myTodo = this.state.todoData.map(function (todo,index) {\n                 // return <TodoItems name={todo.name} key={index} completed={todo.completed} handleChange={this.onChangeHandler} />\n                 // return <TodoItems todo={todo} handleChange={this.onChangeHandler}/>\n             \n             // })\n             return (\n                 \n                 <div>\n             \n                     {/* {myTodo} */}\n                     {this.state.todos.map((todo,index)=>(\n                         <>\n                     <p>{todo.name}</p> \n                     <input type=\"checkbox\" checked={todo.completed} onChange={()=>onChangeHandler(index)} key={index}/>\n                     <label>{todo.name + \" \" + todo.completed}</label>\n                     </>\n                     )) }\n                     {/* <TodoItems todo={todo} handleChange={this.onChangeHandler}/> */}\n                 </div>\n             )\n         \n    \n}\nexport default App"]},"metadata":{},"sourceType":"module"}